#!/bin/bash -x

# Print out version information
${{CODESONAR_PATH}}/codesonar --version

# Change to the build directory
cd ${{CODESONAR_BUILD_DIR}}

# Clean the build
${{CODESONAR_CLEAN_CMD}}

# Perform P10 analysis?
if ${{CODESONAR_P10_ANALYSIS}}; then
  presets='-preset pow10'
else
  presets=''
fi

# Capture build artifacts
${{CODESONAR_PATH}}/codesonar build ${{TOOL_ANALYSIS_DIR}}/SCRUBAnalysis -project ${{CODESONAR_PROJ_NAME}} ${{CODESONAR_BUILD_FLAGS}} -foreground -auth certificate -hubcert ${{CODESONAR_CERT}} -hubkey ${{CODESONAR_KEY}} ${{CODESONAR_HUB}} ${{CODESONAR_BUILD_CMD}}

# Perform CodeSonar analysis
${{CODESONAR_PATH}}/codesonar analyze ${{TOOL_ANALYSIS_DIR}}/SCRUBAnalysis -project ${{CODESONAR_PROJ_NAME}} ${{CODESONAR_ANALYZE_FLAGS}} -foreground $presets -auth certificate -hubcert ${{CODESONAR_CERT}} -hubkey ${{CODESONAR_KEY}} ${{CODESONAR_HUB}}

# Get the analysis ID from the analysis artifacts
aid=`cat ${{TOOL_ANALYSIS_DIR}}/*/aid.txt`

# Change to the analysis directory
cd ${{TOOL_ANALYSIS_DIR}}

# Get the results
results_template='${{CODESONAR_RESULTS_TEMPLATE}}'
re='^[0-9]+$'
if [[ $results_template =~ $re ]] ; then
    # Get the results from the CodeSonar Hub
    ${{CODESONAR_PATH}}/codesonar get -auth certificate -hubcert ${{CODESONAR_CERT}} -hubkey ${{CODESONAR_KEY}} ${{CODESONAR_GET_FLAGS}} "${{CODESONAR_HUB}}/search.xml?swarnings=%7B%0A%20%20%22visible%22%3A%20%7B%0A%20%20%20%20%22%2A%22%3A%20true%0A%20%20%7D%0A%7D&scope=aid%3A$aid&filter=%22active%22"

    # Parse the results into SCRUB format
    python3 -m scrub.tools.parsers.get_codesonar_warnings ${{TOOL_ANALYSIS_DIR}}/*.xml ${{RAW_RESULTS_DIR}}/codesonar_raw.scrub ${{CODESONAR_HUB}}
else
    # Get the results from the CodeSonar Hub
    ${{CODESONAR_PATH}}/codesonar get -auth certificate -hubcert ${{CODESONAR_CERT}} -hubkey ${{CODESONAR_KEY}} ${{CODESONAR_GET_FLAGS}} "${{CODESONAR_HUB}}/warning_detail_search.sarif?scope=aid%3A$aid&filter=%22active%22"

    # Parse the results into SCRUB format
    python3 -m scrub.tools.parsers.translate_results ${{TOOL_ANALYSIS_DIR}}/*.sarif ${{RAW_RESULTS_DIR}}/codesonar_raw.scrub ${{SOURCE_DIR}} scrub
fi

# Get the metrics
${{CODESONAR_PATH}}/codesonar get -auth certificate -hubcert ${{CODESONAR_CERT}} -hubkey ${{CODESONAR_KEY}} "${{CODESONAR_HUB}}/metric_search.json?scope=aid%3A$aid&query=aid%3A$aid&metrics=LB%3A200%2CLCodeOnly%3A200%2CLComOnly%3A200%2CvG%3A200%2CTaintSink%3A200%2CTaintSource%3A200%2CLCode%3A200%2CLCom%3A200%2CLMCC%3A200%2CmvG%3A200%2CTaintProp%3A200%2CTL%3A200"
python3 -m scrub.tools.parsers.parse_metrics "${{TOOL_ANALYSIS_DIR}}/metric_search.json" "${{SCRUB_ANALYSIS_DIR}}/codesonar_metrics.csv" "${{SOURCE_DIR}}" codesonar